{
  "workbench.colorTheme": "Andromeda Colorizer",
  "editor.minimap.enabled": false,
  "editor.fontSize": 14,
  "terminal.integrated.fontSize": 14,
  "editor.wordWrap": "wordWrapColumn",
  "editor.showFoldingControls": "always",
  "editor.folding": true,
  "editor.foldingStrategy": "indentation",
  // "telemetry.enableTelemetry": false,
  // "editor.parameterHints.enabled": false,
  // "security.workspace.trust.enabled": false,
  // "debug.javascript.codelens.npmScripts": "never",
  "workbench.statusBar.visible": true,
  "editor.rulers": [ 80, 120 ],
  "files.associations": {
    "*.js": "javascriptreact"
  },
  "editor.fontFamily": "'MesloLGS NF','Droid Sans Mono', monospace",
  "editor.formatOnPaste": true,
  "editor.fontLigatures": true,
  "disableLigatures.mode": "Line",
  "editor.renderWhitespace": "all",
  "vim.startInInsertMode": true,
  "files.autoSave": "onFocusChange",
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.sneak": true,
  "vim.sneakReplacesF": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "editor.lineNumbers": "relative",
  "vim.statusBarColorControl": true,
  "vim.statusBarColors.normal": [
    "#8FBCBB",
    "#000"
  ],
  "vim.statusBarColors.insert": [
    "#BF616A",
    "#000"
  ],
  "vim.statusBarColors.visual": [
    "#B48EAD",
    "#000"
  ],
  "vim.statusBarColors.visualline": [
    "#B48EAD",
    "#000"
  ],
  "vim.statusBarColors.visualblock": [
    "#A3BE8C",
    "#000"
  ],
  "vim.statusBarColors.replace": "#D08770",
  "vim.statusBarColors.commandlineinprogress": "#007ACC",
  "vim.statusBarColors.searchinprogressmode": "#007ACC",
  "vim.statusBarColors.easymotionmode": "#007ACC",
  "vim.statusBarColors.easymotioninputmode": "#007ACC",
  "vim.statusBarColors.surroundinputmode": "#007ACC",
  "workbench.colorCustomizations": {
    "statusBar.background": "#BF616A",
    "statusBar.noFolderBackground": "#BF616A",
    "statusBar.debuggingBackground": "#BF616A",
    "statusBar.foreground": "#000",
    "statusBar.debuggingForeground": "#000",
    "editorRuler.foreground": "#ff4081"
  },
  "redhat.telemetry.enabled": true,
  "editor.scrollbar.verticalScrollbarSize": 20,
  "notebook.compactView": false,
  "tabnine.experimentalAutoImports": true,
  "vs-kubernetes": {
    "vscode-kubernetes.minikube-path.linux": "/home/tenacity/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube",
    "vscode-kubernetes.helm-path.linux": "/home/tenacity/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm"
  },
  "files.exclude": {
    "": true,
    "**/.git": false
  },
  "git.confirmSync": false,
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      "before": ["j", "k"],
      "after": ["<ESC>"]
    }
  ],
  "vspacecode.bindingOverrides": [
    {
      "keys": "D",
      "name": "Dendron...",
      "type": "bindings",
      "bindings": [
        {
          "key": "]",
          "name": "Next sibling",
          "type": "command",
          "command": "dendron.goNextHierarchy",
        },
        {
          "key": "[",
          "name": "Previous sibling",
          "type": "command",
          "command": "dendron.goPrevHierarchy",
        },
        {
          "key": "c",
          "name": "Create Note...",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "Child note",
              "type": "command",
              "command": "dendron.goDownHierarchy",
            },
            {
              "key": "d",
              "name": "Daily note",
              "type": "command",
              "command": "dendron.createDailyJournalNote",
            },
            {
              "key": "j",
              "name": "Journal note",
              "type": "command",
              "command": "dendron.createJournalNote",
            },
            {
              "key": "m",
              "name": "Meeting note",
              "type": "command",
              "command": "dendron.createMeetingNote",
            },
            {
              "key": "t",
              "name": "Task note",
              "type": "command",
              "command": "dendron.createTask",
            },
            {
              "key": "x",
              "name": "Scratch note",
              "type": "command",
              "command": "dendron.createScratchNote",
            }
          ]
        },
        {
          "key": "D",
          "name": "Delete note",
          "type": "command",
          "command": "dendron.delete",
        },
        {
          "key": "g",
          "name": "Goto...",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Backlink",
              "type": "command",
              "command": "dendron.gotoBacklink",
            },
            {
              "key": "d",
              "name": "Down Hierarchy",
              "type": "command",
              "command": "dendron.goDownHierarchy",
            },
            {
              "key": "g",
              "name": "Goto",
              "type": "command",
              "command": "dendron.goto",
            },
            {
              "key": "j",
              "name": "Down Hierarchy",
              "type": "command",
              "command": "dendron.goDownHierarchy",
            },
            {
              "key": "k",
              "name": "Meeting note",
              "type": "command",
              "command": "dendron.goUpHierarchy",
            },
            {
              "key": "n",
              "name": "Goto note",
              "type": "command",
              "command": "dendron.gotoNote",
            },
            {
              "key": "s",
              "name": "Settings",
              "type": "command",
              "command": "dendron.configureRaw",
            },
            {
              "key": "u",
              "name": "Up hierarchy",
              "type": "command",
              "command": "dendron.goUpHierarchy",
            },
          ]
        },
        {
          "key": "h",
          "name": "Refactor hierarchy",
          "type": "command",
          "command": "dendron.refactorHierarchy",
        },
        {
          "key": "i",
          "name": "Insert...",
          "type": "bindings",
          "bindings": [
            {
              "key": "i",
              "name": "Note Index",
              "type": "command",
              "command": "dendron.insertNoteIndex",
            },
            {
              "key": "l",
              "name": "Note Link",
              "type": "command",
              "command": "dendron.insertNoteLink",
            },
          ]
        },
        {
          "key": "l",
          "name": "Links...",
          "type": "bindings",
          "bindings": [
            {
              "key": "l",
              "name": "Lookup Note",
              "type": "command",
              "command": "dendron.lookupNote",
            },
            {
              "key": "n",
              "name": "Copy Note Link",
              "type": "command",
              "command": "dendron.copyNoteLink",
            },
            {
              "key": "r",
              "name": "Note Ref",
              "type": "command",
              "command": "dendron.copyNoteRef",
            },
          ]
        },
        {
          "key": "m",
          "name": "Move...",
          "type": "bindings",
          "bindings": [
            {
              "key": "n",
              "name": "Move Note",
              "type": "command",
              "command": "dendron.moveNote",
            },
            {
              "key": "h",
              "name": "Move Header",
              "type": "command",
              "command": "dendron.moveHeader",
            },
            {
              "key": "s",
              "name": "Move Seletion to...",
              "type": "command",
              "command": "dendron.moveSelectionTo",
            }
          ]
        },
        {
          "key": "o",
          "name": "Browse (open) Note",
          "type": "command",
          "command": "dendron.browseNote",
        },
        {
          "key": "r",
          "name": "Reload Index",
          "type": "command",
          "command": "dendron.reloadIndex",
        },
        {
          "key": "s",
          "name": "Workspace Sync",
          "type": "command",
          "command": "dendron.sync",
        },
        {
          "key": "S",
          "name": "Lookup Schema",
          "type": "command",
          "command": "dendron.lookupSchema",
        },
        {
          "key": "t",
          "name": "Task...",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "Complete Task",
              "type": "command",
              "command": "dendron.completeTask",
            },
            {
              "key": "s",
              "name": "Set State",
              "type": "command",
              "command": "dendron.setTaskStatus",
            },
          ]
        },
        { // w instead of ctrl+w https://linuxhint.com/how-to-use-vim-split-screen/
          "key": "w",
          "name": "Editor Pane/Tab...",
          "type": "bindings",
          "bindings": [
            {
              "key": "h",
              "name": "move focus left",
              "type": "command",
              "command": "workbench.action.moveEditorToLeftGroup",
            },
            {
              "key": "j",
              "name": "move focus down",
              "type": "command",
              "command": "workbench.action.moveEditorToBelowGroup",
            },
            {
              "key": "k",
              "name": "move focus up",
              "type": "command",
              "command": "workbench.action.moveEditorToAboveGroup",
            },
            {
              "key": "l",
              "name": "move focus right",
              "type": "command",
              "command": "workbench.action.moveEditorToRightGroup",
            },
          ]
        }
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    }
  //   {
  //     "before": ["<Leader>", "t", "t"],
  //     "commands": [":tabnew"]
  //   },
  //   {
  //     "before": ["<Leader>","t","o"],
  //     "commands": [":tabo"]
  //   },
  //   {
  //     "before": ["<Leader>", "/"],
  //     "commands": [":nohl"]
  //   },
  //   {
  //     "before": ["<Leader>", "p"],
  //     "commands": ["workbench.action.showCommands"]
  //   },
  //   {
  //     "before": [ "<Leader>", "t"],
  //     "commands": ["workbench.action.gotoSymbol"]
  //   },

  ],
  "vim.normalModeKeyBindings": [
    {
      "before": ["<tab>"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["<S-tab>"],
      "commands": ["workbench.action.previousEditor"]
    },
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    }
  ],
  "vim.visualModeKeyBindings": [
    { // indent
      "before": [">"],
      "after": [">", "g", "v"]
    },
    { // decrease indentation
      "before": ["<"],
      "after": ["<", "g", "v"]
    },
    { // insert mode from visual mode
      "before": ["i"],
      "after": ["<Esc>", "i"]
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,  // vscode select all
    "<C-f>": false,  // vscode find
    "<C-c>": false,  // vscode copy
    "<C-x>": false,  // vscode cut
    "<C-v>": false,  // vscode paste
    "<C-z>": false,  // vscode undo
    "<C-y>": false,  // vscode redo
    "<C-k>": false,  // vscode key chord
    "<C-w>": false,  // vscode closeEditor
  },
}